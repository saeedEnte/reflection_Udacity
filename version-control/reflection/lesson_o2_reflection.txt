What is the benefit of the staging area?


How can you use the staging area to make sure you have one commit per logical change?
The changes that could be made, do not have to be commited necessarily. They can be transformed in the staging area and when they reach to a reasonable step, the commit could be made. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you get to a decision to make different versions for a program in a certain stage the branches can be created. If you checkout for a previous commit, and want to make some changes, the branch can be made in order not to loose the changes of the previous branch.

How do the diagrams help you visualize the branch structure?
The diagram can show the deviation of the different branches and the sequence of the commits in each branch. 


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
The deviated branch will be merged into the master and gives a single branch. The way that we represent in the diagram allows us to understand the fact that the commits in the branch that has been merged is still kept.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Pros: not spending that much time
cons: some of the inspectations are skipped 
